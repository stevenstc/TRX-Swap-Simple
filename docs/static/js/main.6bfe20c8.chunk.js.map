{"version":3,"sources":["utils/index.js","cons.js","components/Contract/index.js","components/CrowdFunding/index.js","components/Datos/index.js","components/Oficina/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","min","deposit","bind","estado","componentDidMount","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","inicio","substr","fin","texto","document","getElementById","innerHTML","setState","tarifa","amount","value","parseFloat","parseInt","tronUSDT","cons","contractUSDT","approve","send","allowance","call","aprovado","remaining","_hex","console","log","loc","location","href","indexOf","getString","split","GET","get","i","l","length","tmp","unescape","decodeURI","investors","inversors","registered","sponsor","alert","render","className","type","id","placeholder","onClick","totalInvestors","totalInvested","totalRefRewards","setstate","esto","Investors","Invested","RefRewards","url","src","alt","class","direccion","link","balanceRef","totalRef","invested","paidAt","my","withdrawn","Link","withdraw","mydireccion","MYwithdrawable","My","cosa","available","toFixed","style","text","WEBSTORE_URL","logo","TronLinkLogo","openTronLink","open","TronLinkGuide","installed","target","rel","FOUNDATION_ADDRESS","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"kOAaeA,EAbD,CACZC,SAAS,EACTC,UAAU,EAEVC,WAAWF,GACTG,KAAKH,QAAUA,GAGXI,YAAYJ,EAASK,GAAkB,IAAD,kIACpBL,EAAQC,WAAWK,GAAGD,GADF,OAC1C,EAAKJ,SADqC,sDCC/B,EANJ,qCAMI,EAFF,qCCHEI,EDCJ,qCECI,MAAME,UAAiBC,YACpCC,YAAYC,GACVC,MAAMD,GAENP,KAAKS,MAAQ,CAEXC,IAAK,IAIPV,KAAKW,QAAUX,KAAKW,QAAQC,KAAKZ,MACjCA,KAAKa,OAASb,KAAKa,OAAOD,KAAKZ,MAG3Bc,oBAAqB,IAAD,kIAClBC,EAAMd,YAAYe,OAAOnB,QAASK,GADhB,OAExB,EAAKW,SACLI,aAAY,IAAM,EAAKJ,UAAS,KAHR,6CAMpBA,SAAS,IAAD,8IAEgBG,OAAOnB,QAAQqB,IAAIC,aAFnC,OAERC,EAFQ,OAGZA,EAAiBJ,OAAOnB,QAAQwB,QAAQC,QAAQF,EAAeC,SAE3DE,EAASH,EAAeI,OAAO,EAAE,GACjCC,EAAML,EAAeI,QAAQ,GAE7BE,EAAQH,EAAO,MAAME,EAEzBE,SAASC,eAAe,SAASC,UAAY,0CAA0CT,EAAe,kCAAkCM,EAAM,OAGpI,GAGV,EAAKI,SAAS,CACZpB,IAJQ,GAKRqB,OAAQ,IAlBE,8CA4BRpB,UAAW,IAAD,6JAGND,EAAQ,EAAKD,MAAbC,IAEJsB,EAASL,SAASC,eAAe,UAAUK,MAC/CD,EAASE,WAAWF,GACpBA,EAASG,SAAgB,IAAPH,GAPJ,SASchB,OAAOnB,QAAQqB,IAAIC,aATjC,cASVC,EATU,OAUdA,EAAiBJ,OAAOnB,QAAQwB,QAAQC,QAAQF,EAAeC,SAVjD,UAYOL,OAAOnB,QAZd,eAYVuC,EAZU,iBAaWA,EAAStC,WAAWK,GAAGkC,GAblC,eAaVC,EAbU,iBAeRA,EAAaC,QAAQrC,EAAiB8B,GAAQQ,OAftC,yBAiBOF,EAAaG,UAAUrB,EAAelB,GAAiBwC,OAjB9D,WAiBVC,EAjBU,OAkBdA,EAAWR,SAASQ,EAASC,UAAUC,MAEvCC,QAAQC,IAAKJ,KAERA,GAAYX,GAtBH,uBAwBNgB,EAAMrB,SAASsB,SAASC,MACrBC,QAAQ,KAAK,GAzBV,iBA6BN,IAHIC,EAAYJ,EAAIK,MAAM,KAAK,GAC3BC,EAAMF,EAAUC,MAAM,KACtBE,EAAM,GACFC,EAAI,EAAGC,EAAIH,EAAII,OAAQF,EAAIC,EAAGD,IAC9BG,EAAML,EAAIE,GAAGH,MAAM,KACvBE,EAAII,EAAI,IAAMC,SAASC,UAAUF,EAAI,KA/BnC,IAkCFJ,EAAG,IAlCD,wBAmCJI,EAAMJ,EAAG,IAAQF,MAAM,KAnCnB,UAqCkBtC,EAAMjB,SAASgE,UAAUH,EAAI,IAAIjB,OArCnD,QAqCAqB,EArCA,OAuCJjB,QAAQC,IAAIgB,GAEPA,EAAUC,WACbrC,SAASC,eAAe,WAAWK,MAAQ0B,EAAI,GAE/ChC,SAASC,eAAe,WAAWK,MAAQI,EA5CzC,wBA+CHV,SAASC,eAAe,WAAWK,MAAQI,EA/CxC,gCAoDNV,SAASC,eAAe,WAAWK,MAAQI,EApDrC,eAuDN4B,EAAUtC,SAASC,eAAe,WAAWK,MAvDvC,UAyDYlB,EAAMjB,SAASgE,UAAU1C,GAAgBsB,OAzDrD,YAyDNoB,EAzDM,QA2DIE,aAEZC,EAAUH,EAAUG,WAKjBjC,GAAUtB,GAlEL,wBAoERiB,SAASC,eAAe,UAAUK,MAAQ,GApElC,UAsEFlB,EAAMjB,SAASa,QAAQqB,EAAOiC,GAASzB,OAtErC,gCAyERxB,OAAOkD,MAAM,+CACbvC,SAASC,eAAe,UAAUK,MAAQ,GA1ElC,gCAiFRD,EAAS,IAAMW,EAAW,GAEvBX,EAASW,EACRA,GAAY,GACdhB,SAASC,eAAe,UAAUK,MAAQ,GAC1CjB,OAAOkD,MAAM,6EAEbvC,SAASC,eAAe,UAAUK,MAAQ,GAC1CjB,OAAOkD,MAAM,wEAOfvC,SAASC,eAAe,UAAUK,MAAQD,EAC1ChB,OAAOkD,MAAM,uEAIflD,OAAOkD,MAAM,2EArGH,8CA6GhBC,SAAU,IAAD,EAEenE,KAAKS,MAArBC,EAFC,EAEDA,IAAKqB,EAFJ,EAEIA,OAIX,OAFArB,EAAM,QAAQA,EAAI,QAEVqB,GAEA,KAAK,EAAIA,EAAS,EACT,MACT,KAAK,EAAIA,EAAS,EACT,MACT,KAAK,EAAIA,EAAS,EACT,MACT,KAAK,EAAIA,EAAS,EACT,MACT,KAAK,EAAIA,EAAS,EACT,MAET,QAASA,EAAS,MAQ1B,OAGI,6BACE,wBAAIqC,UAAU,eAAd,WACU,wCAAqB,8BAG/B,yBAAKA,UAAU,0BACb,2BAAOC,KAAK,SAASD,UAAU,iCAAiCE,GAAG,SAASC,YAAa7D,IACzF,uBAAG0D,UAAU,aAAb,kDAEA,uBAAGlB,KAAK,UAAUkB,UAAU,kBAAkBI,QAAS,IAAMxE,KAAKW,WAAlE,cCtMG,MAAMP,UAAiBC,YACpCC,YAAYC,GACVC,MAAMD,GAENP,KAAKS,MAAQ,CACXgE,eAAgB,EAChBC,cAAe,EACfC,gBAAiB,GAGnB3E,KAAKyE,eAAiBzE,KAAKyE,eAAe7D,KAAKZ,MAG3Cc,oBAAqB,IAAD,kIAClBC,EAAMd,YAAYe,OAAOnB,QAASK,GADhB,OAExBe,aAAY,IAAM,EAAKwD,kBAAiB,KAFhB,6CAKpBA,iBAAkB,IAAD,wIAEJ1D,EAAMjB,SAAS8E,WAAWlC,OAFtB,OAEjBmC,EAFiB,OAIrB,EAAK/C,SAAS,CACZ2C,eAAgBtC,SAAS0C,EAAKC,UAAUjC,MACxC6B,cAAevC,SAAS0C,EAAKE,SAASlC,MAAM,IAC5C8B,gBAAiBxC,SAAS0C,EAAKG,WAAWnC,MAAM,MAP7B,6CAavBsB,SAAU,IAAD,EACoDnE,KAAKS,MAAxDgE,EADD,EACCA,eAAgBC,EADjB,EACiBA,cAAeC,EADhC,EACgCA,gBAEnCM,EAAM,kCAAkC/E,EAAgB,QAE5D,OACE,yBAAKkE,UAAU,kCACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,uBAAGlB,KAAM+B,EAAKb,UAAU,gBACpB,yBAAKA,UAAU,oBACX,yBAAKc,IAAI,8BAA8BC,IAAI,MAE/C,yBAAKf,UAAU,qBACX,4BAAKK,GACL,kDAIZ,yBAAKL,UAAU,YACX,uBAAGlB,KAAM+B,EAAKb,UAAU,gBACpB,yBAAKA,UAAU,oBACX,yBAAKc,IAAI,8BAA8BC,IAAI,MAE/C,yBAAKf,UAAU,qBACX,4BAAKM,EAAL,SACA,iDAIZ,yBAAKN,UAAU,YACX,uBAAGlB,KAAM+B,EAAKb,UAAU,gBACpB,yBAAKA,UAAU,oBACX,yBAAKc,IAAI,8BAA8BC,IAAI,MAE/C,yBAAKf,UAAU,qBACX,4BAAKO,EAAL,SACA,2DAMpB,yBAAKS,MAAM,e,YC1EN,MAAMhF,UAAiBC,YACpCC,YAAYC,GACVC,MAAMD,GAENP,KAAKS,MAAQ,CACX4E,UAAW,GACXC,KAAM,wDACNtB,YAAY,EACZuB,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,OAAQ,EACRC,GAAI,EACJC,UAAW,GAIb5F,KAAK8E,UAAY9E,KAAK8E,UAAUlE,KAAKZ,MACrCA,KAAK6F,KAAO7F,KAAK6F,KAAKjF,KAAKZ,MAC3BA,KAAK8F,SAAW9F,KAAK8F,SAASlF,KAAKZ,MAG/Bc,oBAAqB,IAAD,kIAClBC,EAAMd,YAAYe,OAAOnB,QAASK,GADhB,OAExBe,aAAY,IAAM,EAAK6D,aAAY,KACnC7D,aAAY,IAAM,EAAK4E,QAAO,KAHN,6CAMpBA,OAAQ,IAAD,8HACU,EAAKpF,MAAnBuD,WADI,wBAILhB,EAAMrB,SAASsB,SAASC,MACrBC,QAAQ,KAAK,IAClBH,EAAMA,EAAIK,MAAM,KAAK,IANd,SAQerC,OAAOnB,QAAQqB,IAAIC,aARlC,OAQL4E,EARK,OASTA,EAAc/E,OAAOnB,QAAQwB,QAAQC,QAAQyE,EAAY1E,SACzD0E,EAAc/C,EAAI,QAAQ+C,EAC1B,EAAKjE,SAAS,CACZwD,KAAMS,IAZC,wBAeT,EAAKjE,SAAS,CACZwD,KAAM,0DAhBC,8CAsBPR,YAAa,IAAD,4IAEM9D,OAAOnB,QAAQqB,IAAIC,aAFzB,cAEZkE,EAFY,gBAGCtE,EAAMjB,SAASgE,UAAUuB,EAAUhE,SAASqB,OAH7C,cAGZmC,EAHY,gBAID9D,EAAMjB,SAASkG,iBAAiBtD,OAJ/B,OAIZuD,EAJY,OAOhB,EAAKnE,SAAS,CACZuD,UAAWrE,OAAOnB,QAAQwB,QAAQC,QAAQ+D,EAAUhE,SACpD2C,WAAYa,EAAKb,WACjBuB,WAAYpD,SAAS0C,EAAKU,WAAW1C,MAAM,IAC3C2C,SAAUrD,SAAS0C,EAAKW,SAAS3C,MAAM,IACvC4C,SAAUtD,SAAS0C,EAAKY,SAAS5C,MAAM,IACvC6C,OAAQvD,SAAS0C,EAAKa,OAAO7C,MAAM,IACnC8C,GAAIxD,SAAS8D,EAAGjE,OAAOa,MAAM,IAC7B+C,UAAWzD,SAAS0C,EAAKe,UAAU/C,MAAM,MAf3B,8CAoBZiD,WAAW,OAAD,0HACG/E,EAAMjB,SAASgG,WAAWtD,OAD7B,OACV0D,EADU,OAEdpD,QAAQC,IAAImD,GAFE,6CAMhB/B,SAAU,IAAD,EACmEnE,KAAKS,MAAzE8E,EADC,EACDA,WAAYC,EADX,EACWA,SAAUC,EADrB,EACqBA,SAAWG,EADhC,EACgCA,UAAYD,EAD5C,EAC4CA,GAAIN,EADhD,EACgDA,UAAWC,EAD3D,EAC2DA,KAE9Da,EAAaZ,EAAWI,EAmB5B,OAlBAQ,EAAYA,EAAUC,QAAQ,GAC9BD,EAAYjE,WAAWiE,GAEvBZ,EAAaA,EAAWa,QAAQ,GAChCb,EAAarD,WAAWqD,GAExBC,EAAWA,EAASY,QAAQ,GAC5BZ,EAAWtD,WAAWsD,GAEtBC,EAAWA,EAASW,QAAQ,GAC5BX,EAAWvD,WAAWuD,GAEtBG,EAAYA,EAAUQ,QAAQ,GAC9BR,EAAY1D,WAAW0D,GAEvBD,EAAKA,EAAGS,QAAQ,GAChBT,EAAKzD,WAAWyD,GAId,6BAAUrB,GAAG,SAASF,UAAU,oCAC9B,yBAAKA,UAAU,yBACb,4BAAQA,UAAU,kBAChB,wBAAIA,UAAU,SAAQ,0BAAMiC,MAAO,CAAC,WAAc,SAA5B,eAGtB,2BAAIhB,GAAc,6BAClB,wBAAIjB,UAAU,SAAd,kBACA,wBAAIA,UAAU,eAAeiC,MAAO,CAAC,QAAW,QAAS,SAAY,SAAS,uBAAGnD,KAAMoC,GAAOA,GAAS,6BAAM,6BAC7G,kBAAC,kBAAD,CAAiBgB,KAAMhB,GACrB,4BAAQjB,KAAK,SAASgC,MAAO,CAAC,OAAU,WAAYjC,UAAU,mBAA9D,uBAGF,8BAIF,yBAAKA,UAAU,OACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,eAAeqB,EAA7B,SACA,8CAKF,yBAAKrB,UAAU,4BACb,wBAAIA,UAAU,eAAeoB,EAA7B,SACA,6DAMF,yBAAKpB,UAAU,4BACb,wBAAIA,UAAU,eAAeuB,EAA7B,SACA,0CAKF,yBAAKvB,UAAU,4BACb,wBAAIA,UAAU,eAAe+B,EAA7B,SACA,yCAMF,yBAAK/B,UAAU,4BACb,wBAAIA,UAAU,eAAe+B,EAA7B,SACA,2BACE,4BAAQ9B,KAAK,SAASD,UAAU,kBAAkBI,QAAS,IAAMxE,KAAK8F,YAAtE,gBAKJ,yBAAK1B,UAAU,4BACb,wBAAIA,UAAU,eAAewB,EAA7B,SACA,6C,qBC9JRW,EAAe,8EAEfC,EACF,yBAAKpC,UAAU,wBACX,yBAAKc,IAAMuB,IAAerC,UAAU,YAAYe,IAAI,mBAItDuB,EAAe,KACjB1F,OAAO2F,KAAKJ,EAAc,WA0CfK,EAvCOrG,IAAU,IAAD,EAGvBA,EADAsG,UAGJ,YAL2B,SAsB3B,oCACI,yBAAKzC,UAAU,eAAeI,QAAUkC,EAAeL,MAAO,CAAC,QAAW,QAEtE,yBAAKjC,UAAU,iBACX,+CACA,wLAKFoC,IAzBF,yBAAKpC,UAAU,MAAMI,QAAUkC,GAC3B,yBAAKtC,UAAU,YACX,iDACA,8IAEgB,uBAAGlB,KAAOqD,EAAeO,OAAO,SAASC,IAAI,uBAA7C,sCAFhB,wDAMFP,ICvBZQ,EAAqB,qCAE3B,MAAMC,UAAY5G,YAChBC,YAAYC,GACVC,MAAMD,GAENP,KAAKS,MAAQ,CACXZ,QAAS,CACPgH,WAAW,EACXK,UAAU,IAKVpG,oBAAqB,IAAD,kIAClB,IAAIqG,SAAQC,IAChB,IAAMC,EAAe,CACnBR,YAAa7F,OAAOnB,QACpBqH,SAAUlG,OAAOnB,SAAWmB,OAAOnB,QAAQyH,OAG7C,GAAID,EAAaR,UAKf,OAJA,EAAK/E,SAAS,CACZjC,QAASwH,IAGJD,IAGT,IAAIG,EAAQ,EAENC,EAAQvG,aAAY,KACxB,GAAIsG,GAAS,GAAI,CAEf,IAAME,EAAe,0BAerB,OAbAzG,OAAOnB,QAAU,IAAI6H,IACnBD,EACAA,EACAA,GAGF,EAAK3F,SAAS,CACZjC,QAAS,CACPgH,WAAW,EACXK,UAAU,KAGdS,cAAcH,GACPJ,IAMT,GAHAC,EAAaR,YAAc7F,OAAOnB,QAClCwH,EAAaH,SAAWlG,OAAOnB,SAAWmB,OAAOnB,QAAQyH,OAEpDD,EAAaR,UAChB,OAAOU,IAGT,EAAKzF,SAAS,CACZjC,QAASwH,IAGXD,MACC,QAlDmB,OAqDnB,EAAK3G,MAAMZ,QAAQqH,WAItBlG,OAAOnB,QAAQ+H,eAAiB,CAC9BC,IAAK7G,OAAOnB,QAAQwB,QAAQyG,MAAMd,GAClCe,OAAQf,GAGVhG,OAAOnB,QAAQmI,GAAG,iBAAiB,KAC7B,EAAKvH,MAAMZ,QAAQqH,UAIvB,EAAKpF,SAAS,CACZjC,QAAS,CACPgH,WAAW,EACXK,UAAU,SAMlBnG,EAAMhB,WAAWiB,OAAOnB,SA5EA,6CA+E1BsE,SACE,OAAKnE,KAAKS,MAAMZ,QAAQgH,UAQnB7G,KAAKS,MAAMZ,QAAQqH,SAUtB,oCAEA,6BAAS9C,UAAU,eAAeE,GAAG,WACnC,yBAAKF,UAAU,aACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,mEACb,wBAAIA,UAAU,cAAd,yBAEF,yBAAKA,UAAU,gDAEb,yBAAKA,UAAU,kBACb,kBAAC,EAAD,WAQV,kBAAC,EAAD,MAEA,yBAAKgB,MAAM,aAEX,kBAAC,EAAD,OAhCA,oCACE,yBAAKhB,UAAU,aACb,kBAAC,EAAD,CAAeyC,WAAS,MAV5B,oCACE,yBAAKzC,UAAU,aACb,kBAAC,EAAD,SA6CK6C,QClJXgB,EAAOtG,SAASC,eAAe,QAGnCsG,IAAS/D,OAAO,kBAAC,EAAD,MAAS8D,I,mBCTzBE,EAAOC,QAAU,IAA0B,0C","file":"static/js/main.6bfe20c8.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\nconst PRU = \"shasta.\";// shasta1. para inhabilitar red de pruebas\n\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\";//T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\n\nconst SC = \"TT19i7wFc6cAgEKrEi4t5V3kHr8JHTT5fq\";// direccion del contrato\n\nconst USDT = \"TExwHCjZYbb7ToQUfQY5JgumwbcXAgeaVd\";// USDT contract or token trc20\n\nexport default {proxy, PRU, WS,  SC, USDT};\n","import cons from \"../../cons.js\";\n/// La direccion de su contrato acá ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nimport cons from \"../../cons.js\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n      min: 10\n\n    };\n\n    this.deposit = this.deposit.bind(this);\n    this.estado = this.estado.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(),3*1000);\n  };\n\n  async estado(){\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var inicio = accountAddress.substr(0,4);\n    var fin = accountAddress.substr(-4);\n\n    var texto = inicio+\"...\"+fin;\n\n    document.getElementById(\"login\").innerHTML = '<a href=\"https://tronscan.io/#/address/'+accountAddress+'\" class=\"logibtn gradient-btn\">'+texto+'</a>';\n\n\n    var min = 10;\n\n\n    this.setState({\n      min: min,\n      tarifa: 5\n    });\n\n    //console.log(min);\n\n\n\n  }\n\n\n  async deposit() {\n\n\n    const { min } = this.state;\n\n    var amount = document.getElementById(\"amount\").value;\n    amount = parseFloat(amount);\n    amount = parseInt(amount*1000000);\n\n    var accountAddress =  await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    await contractUSDT.approve(contractAddress, amount).send();\n\n    var aprovado = await contractUSDT.allowance(accountAddress,contractAddress).call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    console.log( aprovado);\n\n    if ( aprovado >= amount ){\n\n        var loc = document.location.href;\n        if(loc.indexOf('?')>0){\n            var getString = loc.split('?')[1];\n            var GET = getString.split('&');\n            var get = {};\n            for(var i = 0, l = GET.length; i < l; i++){\n                var tmp = GET[i].split('=');\n                get[tmp[0]] = unescape(decodeURI(tmp[1]));\n            }\n\n            if (get['ref']) {\n              tmp = get['ref'].split('#');\n\n              var inversors = await Utils.contract.investors(tmp[0]).call();\n\n              console.log(inversors);\n\n              if ( inversors.registered ) {\n                document.getElementById('sponsor').value = tmp[0];\n              }else{\n                document.getElementById('sponsor').value = cons.WS;\n              }\n            }else{\n               document.getElementById('sponsor').value = cons.WS;\n            }\n\n        }else{\n\n            document.getElementById('sponsor').value = cons.WS;\n        }\n\n        var sponsor = document.getElementById(\"sponsor\").value;\n\n        var investors = await Utils.contract.investors(accountAddress).call();\n\n        if (investors.registered) {\n\n          sponsor = investors.sponsor;\n\n        }\n\n\n        if ( amount >= min){\n\n          document.getElementById(\"amount\").value = \"\";\n\n          await Utils.contract.deposit(amount,sponsor).send();\n\n        }else{\n          window.alert(\"Please enter an amount greater than 10 USDT\");\n          document.getElementById(\"amount\").value = 10;\n        }\n\n\n\n    }else{\n\n      if (amount > 10 && aprovado > 10) {\n\n        if ( amount > aprovado) {\n          if (aprovado <= 0) {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\"You do not have enough funds in your account you place at least 10 USDT\");\n          }else{\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n          }\n\n\n\n        }else{\n\n          document.getElementById(\"amount\").value = amount;\n          window.alert(\"You must leave 50 TRX free in your account to make the transaction\");\n\n        }\n      }else{\n        window.alert(\"You do not have enough funds in your account you place at least 250 TRX\");\n      }\n    }\n\n\n  };\n\n\n  render() {\n\n    var { min, tarifa } = this.state;\n\n    min = \"Min. \"+min+\" USDT\";\n\n    switch (tarifa)\n        {\n            case 0:  tarifa = 2;\n                     break;\n            case 1:  tarifa = 3;\n                     break;\n            case 2:  tarifa = 4;\n                     break;\n            case 3:  tarifa = 5;\n                     break;\n            case 4:  tarifa = 6;\n                     break;\n\n            default: tarifa = \"N/A\";\n                     break;\n        }\n\n\n\n\n\n    return (\n\n\n        <div>\n          <h6 className=\"text-center\">\n            Return: <strong>200%</strong><br />\n          </h6>\n\n          <div className=\"form-group text-center\">\n            <input type=\"number\" className=\"form-control mb-20 text-center\" id=\"amount\" placeholder={min}></input>\n            <p className=\"card-text\">You must have ~ 50 TRX to make the transaction</p>\n\n            <a href=\"#amount\" className=\"gradient-btn v2\" onClick={() => this.deposit()}>Deposit</a>\n\n\n\n\n          </div>\n\n        </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0\n    };\n\n    this.totalInvestors = this.totalInvestors.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.totalInvestors(),1000);\n  };\n\n  async totalInvestors() {\n\n    let esto = await Utils.contract.setstate().call();\n    //console.log(esto);\n    this.setState({\n      totalInvestors: parseInt(esto.Investors._hex),\n      totalInvested: parseInt(esto.Invested._hex)/1000000,\n      totalRefRewards: parseInt(esto.RefRewards._hex)/1000000\n\n    });\n\n  };\n\n  render() {\n    const { totalInvestors, totalInvested, totalRefRewards } = this.state;\n\n    var url = 'https://tronscan.io/#/contract/'+contractAddress+'/code';\n\n    return (\n      <div className=\"single-about-area wow fadeInUp\">\n          <div className=\"container\">\n              <div className=\"row\">\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-1.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalInvestors}</h1>\n                              <p>Global Investors</p>\n                          </div>\n                      </a>\n                  </div>\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-2.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalInvested} USDT</h1>\n                              <p>Global Inverted</p>\n                          </div>\n                      </a>\n                  </div>\n                  <div className=\"col-lg-4\">\n                      <a href={url} className=\"single-about\">\n                          <div className=\"single-about-img\">\n                              <img src=\"assets/img/about-icon-3.png\" alt=\"\" />\n                          </div>\n                          <div className=\"single-about-text\">\n                              <h1>{totalRefRewards} USDT</h1>\n                              <p>Global Referral Rewards</p>\n                          </div>\n                      </a>\n                  </div>\n              </div>\n          </div>\n          <div class=\"space-90\"></div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      direccion: \"\",\n      link: \"Haz una inversión para obtener el LINK de referido\",\n      registered: false,\n      balanceRef: 0,\n      totalRef: 0,\n      invested: 0,\n      paidAt: 0,\n      my: 0,\n      withdrawn: 0\n\n    };\n\n    this.Investors = this.Investors.bind(this);\n    this.Link = this.Link.bind(this);\n    this.withdraw = this.withdraw.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    setInterval(() => this.Investors(),300);\n    setInterval(() => this.Link(),1000);\n  };\n\n  async Link() {\n    const {registered} = this.state;\n    if(registered){\n\n      let loc = document.location.href;\n      if(loc.indexOf('?')>0){\n        loc = loc.split('?')[0]\n      }\n      let mydireccion = await window.tronWeb.trx.getAccount();\n      mydireccion = window.tronWeb.address.fromHex(mydireccion.address)\n      mydireccion = loc+'?ref='+mydireccion;\n      this.setState({\n        link: mydireccion,\n      });\n    }else{\n      this.setState({\n        link: \"Haz una inversión para obtener el LINK de referido\",\n      });\n    }\n  }\n\n\n  async Investors() {\n\n    let direccion = await window.tronWeb.trx.getAccount();\n    let esto = await Utils.contract.investors(direccion.address).call();\n    let My = await Utils.contract.MYwithdrawable().call();\n    //console.log(esto);\n    //console.log(My);\n    this.setState({\n      direccion: window.tronWeb.address.fromHex(direccion.address),\n      registered: esto.registered,\n      balanceRef: parseInt(esto.balanceRef._hex)/1000000,\n      totalRef: parseInt(esto.totalRef._hex)/1000000,\n      invested: parseInt(esto.invested._hex)/1000000,\n      paidAt: parseInt(esto.paidAt._hex)/1000000,\n      my: parseInt(My.amount._hex)/1000000,\n      withdrawn: parseInt(esto.withdrawn._hex)/1000000\n    });\n\n  };\n\n  async withdraw(){\n    var cosa = await Utils.contract.withdraw().send();\n    console.log(cosa);\n  };\n\n\n  render() {\n    var { balanceRef, totalRef, invested,  withdrawn , my, direccion, link} = this.state;\n\n    var available = (balanceRef+my);\n    available = available.toFixed(6);\n    available = parseFloat(available);\n\n    balanceRef = balanceRef.toFixed(2);\n    balanceRef = parseFloat(balanceRef);\n\n    totalRef = totalRef.toFixed(2);\n    totalRef = parseFloat(totalRef);\n\n    invested = invested.toFixed(2);\n    invested = parseFloat(invested);\n\n    withdrawn = withdrawn.toFixed(2);\n    withdrawn = parseFloat(withdrawn);\n\n    my = my.toFixed(6);\n    my = parseFloat(my);\n\n    return (\n\n      <section  id=\"office\" className=\"simple-services-area section-gap\">\n        <div className=\"container text-center\">\n          <header className=\"section-header\">\n            <h3 className=\"white\"><span style={{'fontweight': 'bold'}}>\n              My office:</span>\n            </h3>\n            <p>{direccion}</p><br />\n            <h3 className=\"white\" >Referral link:</h3>\n            <h6 className=\"aboutus-area\" style={{'padding': '1.5em', 'fontSize': '11px'}}><a href={link}>{link}</a><br /><br />\n            <CopyToClipboard text={link}>\n              <button type=\"button\" style={{'cursor': 'pointer'}} className=\"btn btn-primary\">Copy to clipboard</button>\n            </CopyToClipboard>\n            </h6>\n            <hr></hr>\n\n          </header>\n\n          <div className=\"row\">\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{invested} USDT</h4>\n              <p>\n                Total invested\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{totalRef} USDT</h4>\n              <p>\n                Total earnings from referrals\n\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{my} USDT</h4>\n              <p>\n                My Profits\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{available} USDT</h4>\n              <p>\n                Available\n              </p>\n\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{available} USDT</h4>\n              <p>\n                <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.withdraw()}>Withdrawal</button>\n\n              </p>\n            </div>\n\n            <div className=\"col-sm-4 single-services\">\n              <h4 className=\"pt-30 pb-20\">{withdrawn} USDT</h4>\n              <p>\n                withdrawn\n\n              </p>\n            </div>\n\n          </div>\n        </div>\n      </section>\n\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <>\n        <div className='tronLink row' onClick={ openTronLink } style={{'padding': '3em'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously created wallet.\n                </p>\n            </div>\n            { logo }\n        </div> \n\n    </>\n    );\n};\n\nexport default TronLinkGuide;","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport Datos from \"../Datos\";\nimport Oficina from \"../Oficina\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide />\n        </div>\n      </>\n      );\n\n    if (!this.state.tronWeb.loggedIn) return (\n      <>\n        <div className=\"container\">\n          <TronLinkGuide installed />\n        </div>\n      </>\n      );\n\n    return (\n\n      <>\n\n      <section className=\"convert-area\" id=\"convert\">\n        <div className=\"container\">\n          <div className=\"convert-wrap\">\n            <div className=\"row justify-content-center align-items-center flex-column pb-30\">\n              <h1 className=\"text-white\">Make your investment</h1>\n            </div>\n            <div className=\"row justify-content-center align-items-start\">\n\n              <div className=\"col-lg-12 cols\">\n                <CrowdFunding />\n              </div>\n\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <Oficina />\n\n      <div class=\"space-90\"></div>\n\n      <Datos />\n\n      </>\n    );\n\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}