{"version":3,"sources":["utils/index.js","components/Contract/index.js","cons.js","components/CrowdFunding/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","min","value","compra","bind","estado","handleChange","event","setState","target","componentDidMount","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","inicio","substr","fin","texto","document","getElementById","innerHTML","RATE","call","rate","amount","parseFloat","parseInt","getBalance","aprovado","console","log","send","callValue","alert","render","className","type","id","onChange","placeholder","href","onClick","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","style","rel","FOUNDATION_ADDRESS","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.bec81106.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","import cons from \"../../cons.js\";\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\nconst PRU = \"shasta.\"; // shasta1. para inhabilitar red de pruebas\n\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"; //T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\n\nconst SC = \"TYuf9GvA8tTxdTbHZ3vPAZcFb67ppae8HN\"; // direccion del contrato\n\nconst USDT = \"TUriS4eNkWyD4diX9fpJ7rr7UZDZdRnEKz\"; // LCN contract or token trc20\n\nexport default { proxy, PRU, WS, SC, USDT };\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\n//import cons from \"../../cons.js\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      min: 10,\n      value: \"\"\n    };\n\n    this.compra = this.compra.bind(this);\n    this.estado = this.estado.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(), 3 * 1000);\n  }\n\n  async estado() {\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var inicio = accountAddress.substr(0, 4);\n    var fin = accountAddress.substr(-4);\n\n    var texto = inicio + \"...\" + fin;\n\n    document.getElementById(\"login\").innerHTML =\n      '<a href=\"https://tronscan.io/#/address/' +\n      accountAddress +\n      '\" class=\"nav-link js-scroll-trigger\">' +\n      texto +\n      \"</a>\";\n\n    var min = 10;\n    /*\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var aprovado = await contractUSDT\n      .allowance(accountAddress, contractAddress)\n      .call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    */\n\n    var rate = await Utils.contract.RATE().call();\n\n    this.setState({\n      min: min,\n      rate: rate / 1000000\n    });\n\n    //console.log(min);\n  }\n\n  async compra() {\n    const { min } = this.state;\n\n    var amount = document.getElementById(\"amount\").value;\n    amount = parseFloat(amount);\n    amount = parseInt(amount * 1000000);\n\n    var aprovado = await window.tronWeb.trx.getBalance();\n    console.log(aprovado);\n    console.log(amount);\n\n    /*\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var aprovado = await contractUSDT\n      .allowance(accountAddress, contractAddress)\n      .call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    */\n\n    if (aprovado >= amount) {\n      if (amount >= min * 1000000) {\n        document.getElementById(\"amount\").value = \"\";\n\n        await Utils.contract.compra().send({ callValue: amount });\n        window.alert(\n          \"Felicidades compraste: \" +\n            parseInt((amount / this.state.rate) * 100) / 100000000 +\n            \" LCN\"\n        );\n      } else {\n        window.alert(\"Please enter an amount greater than 10 TRX\");\n        document.getElementById(\"amount\").value = 10;\n      }\n    } else {\n      if (amount > 10 && aprovado > 10) {\n        /*\n        if (aprovado <= 0) {\n          await contractUSDT\n            .approve(\n              contractAddress,\n              \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n            )\n            .send();\n        }\n        */\n\n        if (amount > aprovado) {\n          if (aprovado <= 0) {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\n              \"You do not have enough funds in your account you place at least 10 TRX\"\n            );\n          } else {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\n              \"You must leave TRX free in your account to make the transaction\"\n            );\n          }\n        } else {\n          document.getElementById(\"amount\").value = amount;\n          window.alert(\n            \"You must leave TRX free in your account to make the transaction\"\n          );\n        }\n      } else {\n        window.alert(\n          \"You do not have enough funds in your account you place at least 10 TRX\"\n        );\n      }\n    }\n  }\n\n  render() {\n    var { min } = this.state;\n\n    min = \"Min. \" + min + \" TRX\";\n\n    return (\n      <div>\n        <div className=\"form-group text-center\">\n          <p className=\"card-text\">1 LCN = {this.state.rate} TRX</p>\n          <input\n            type=\"number\" className=\"form-control mb-20 text-center\" id=\"amount\" value={this.state.value} onChange={this.handleChange}\n            placeholder={min}\n          ></input>\n          <p className=\"card-text\">you get: {this.state.value/this.state.rate} LCN</p>\n          <p className=\"card-text\">You have TRX in you acount to make the transacction</p>\n\n          <a\n            href=\"#root\"\n            className=\"btn btn-outline-light py-3 px-4 rounded-pill js-scroll-trigger\"\n            onClick={() => this.compra()}\n          >Buy LCN</a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <>  <a href='/'>\n        <div className='tronLink row' style={{'padding': '3em','decoration':'none','color':'black'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n\n        </a>\n\n    </>\n    );\n};\n\nexport default TronLinkGuide;\n","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed)\n      return (\n        <>\n          <div className=\"container\">\n            <TronLinkGuide />\n          </div>\n        </>\n      );\n\n    if (!this.state.tronWeb.loggedIn)\n      return (\n        <>\n          <div className=\"container\">\n            <TronLinkGuide installed />\n          </div>\n        </>\n      );\n\n    return (\n      <>\n        <section className=\"download bg-primary text-center\" id=\"download\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 mx-auto\">\n                <h2 className=\"section-heading\">Buy LION COIN!</h2>\n                <p>\n                  Dont miss the oportunity to help!\n                </p>\n                <CrowdFunding />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}