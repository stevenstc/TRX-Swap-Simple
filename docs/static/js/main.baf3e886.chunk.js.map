{"version":3,"sources":["utils/index.js","components/Contract/index.js","cons.js","components/CrowdFunding/index.js","components/TronLinkGuide/index.js","components/App/index.js","index.js","components/TronLinkGuide/TronLinkLogo.png"],"names":["utils","tronWeb","contract","setTronWeb","this","setContract","contractAddress","at","EarnTron","Component","constructor","props","super","state","min","compra","bind","estado","componentDidMount","Utils","window","setInterval","trx","getAccount","accountAddress","address","fromHex","inicio","substr","fin","texto","document","getElementById","innerHTML","RATE","call","rate","setState","amount","value","parseFloat","parseInt","getBalance","aprovado","console","log","send","callValue","alert","render","className","type","id","placeholder","href","onClick","WEBSTORE_URL","logo","src","TronLinkLogo","alt","openTronLink","open","TronLinkGuide","installed","style","target","rel","FOUNDATION_ADDRESS","App","loggedIn","Promise","resolve","tronWebState","ready","tries","timer","TRONGRID_API","TronWeb","clearInterval","defaultAddress","hex","toHex","base58","on","root","ReactDOM","module","exports"],"mappings":"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","file":"static/js/main.baf3e886.chunk.js","sourcesContent":["const utils = {\n  tronWeb: false,\n  contract: false,\n\n  setTronWeb(tronWeb) {\n    this.tronWeb = tronWeb;\n  },\n\n  async setContract(tronWeb, contractAddress) {\n    this.contract = await tronWeb.contract().at(contractAddress);\n  }\n};\n\nexport default utils;\n","import cons from \"../../cons.js\";\n/// La direccion de su contrato acÃ¡ ///////////////////////////////////\nconst contractAddress = cons.SC;\n\nexport default contractAddress;","const proxy = \"https://proxy-ewozx.herokuapp.com/\";\nconst PRU = \"shasta.\"; // shasta1. para inhabilitar red de pruebas\n\nconst WS = \"T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb\"; //T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb recibe los huerfanos por defecto\n\nconst SC = \"TYuf9GvA8tTxdTbHZ3vPAZcFb67ppae8HN\"; // direccion del contrato\n\nconst USDT = \"TUriS4eNkWyD4diX9fpJ7rr7UZDZdRnEKz\"; // LCN contract or token trc20\n\nexport default { proxy, PRU, WS, SC, USDT };\n","import React, { Component } from \"react\";\nimport Utils from \"../../utils\";\nimport contractAddress from \"../Contract\";\n\n//import cons from \"../../cons.js\";\n\nexport default class EarnTron extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      min: 10\n    };\n\n    this.compra = this.compra.bind(this);\n    this.estado = this.estado.bind(this);\n  }\n\n  async componentDidMount() {\n    await Utils.setContract(window.tronWeb, contractAddress);\n    this.estado();\n    setInterval(() => this.estado(), 3 * 1000);\n  }\n\n  async estado() {\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var inicio = accountAddress.substr(0, 4);\n    var fin = accountAddress.substr(-4);\n\n    var texto = inicio + \"...\" + fin;\n\n    document.getElementById(\"login\").innerHTML =\n      '<a href=\"https://tronscan.io/#/address/' +\n      accountAddress +\n      '\" class=\"nav-link js-scroll-trigger\">' +\n      texto +\n      \"</a>\";\n\n    var min = 10;\n    /*\n\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var aprovado = await contractUSDT\n      .allowance(accountAddress, contractAddress)\n      .call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    */\n\n    var rate = await Utils.contract.RATE().call();\n\n    this.setState({\n      min: min,\n      rate: rate / 1000000\n    });\n\n    //console.log(min);\n  }\n\n  async compra() {\n    const { min } = this.state;\n\n    var amount = document.getElementById(\"amount\").value;\n    amount = parseFloat(amount);\n    amount = parseInt(amount * 1000000);\n\n    var aprovado = await window.tronWeb.trx.getBalance();\n    console.log(aprovado);\n    console.log(amount);\n\n    /*\n    var tronUSDT = await window.tronWeb;\n    var contractUSDT = await tronUSDT.contract().at(cons.USDT);\n\n    var accountAddress = await window.tronWeb.trx.getAccount();\n    accountAddress = window.tronWeb.address.fromHex(accountAddress.address);\n\n    var aprovado = await contractUSDT\n      .allowance(accountAddress, contractAddress)\n      .call();\n    aprovado = parseInt(aprovado.remaining._hex);\n\n    */\n\n    if (aprovado >= amount) {\n      if (amount >= min * 1000000) {\n        document.getElementById(\"amount\").value = \"\";\n\n        await Utils.contract.compra().send({ callValue: amount });\n        window.alert(\n          \"Felicidades compraste: \" +\n            parseInt((amount / this.state.rate) * 100) / 100000000 +\n            \" LCN\"\n        );\n      } else {\n        window.alert(\"Please enter an amount greater than 10 TRX\");\n        document.getElementById(\"amount\").value = 10;\n      }\n    } else {\n      if (amount > 10 && aprovado > 10) {\n        /*\n        if (aprovado <= 0) {\n          await contractUSDT\n            .approve(\n              contractAddress,\n              \"115792089237316195423570985008687907853269984665640564039457584007913129639935\"\n            )\n            .send();\n        }\n        */\n\n        if (amount > aprovado) {\n          if (aprovado <= 0) {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\n              \"You do not have enough funds in your account you place at least 10 TRX\"\n            );\n          } else {\n            document.getElementById(\"amount\").value = 10;\n            window.alert(\n              \"You must leave TRX free in your account to make the transaction\"\n            );\n          }\n        } else {\n          document.getElementById(\"amount\").value = amount;\n          window.alert(\n            \"You must leave TRX free in your account to make the transaction\"\n          );\n        }\n      } else {\n        window.alert(\n          \"You do not have enough funds in your account you place at least 10 TRX\"\n        );\n      }\n    }\n  }\n\n  render() {\n    var { min } = this.state;\n\n    min = \"Min. \" + min + \" TRX\";\n\n    return (\n      <div>\n        <div className=\"form-group text-center\">\n          <p className=\"card-text\">1 LCN = {this.state.rate} TRX</p>\n          <input\n            type=\"number\"\n            className=\"form-control mb-20 text-center\"\n            id=\"amount\"\n            placeholder={min}\n          ></input>\n          <p className=\"card-text\">Debes tener almenos 5 TRX para hacer la transacciÃ³n</p>\n\n          <a\n            href=\"#root\"\n            className=\"btn btn-outline-light py-3 px-4 rounded-pill js-scroll-trigger\"\n            onClick={() => this.compra()}\n          >Comprar</a>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport TronLinkLogo from './TronLinkLogo.png';\n\n\nconst WEBSTORE_URL = 'https://chrome.google.com/webstore/detail/ibnejdfjmmkpcnlpebklmnkoeoihofec/';\n\nconst logo = (\n    <div className='col-sm-4 text-center'>\n        <img src={ TronLinkLogo } className=\"img-fluid\" alt='TronLink logo' />\n    </div>\n);\n\nconst openTronLink = () => {\n    window.open(WEBSTORE_URL, '_blank');\n};\n\nconst TronLinkGuide = props => {\n    const {\n        installed = false\n    } = props;\n\n    if(!installed) {\n        return (\n            <div className='row' onClick={ openTronLink }>\n                <div className='col-sm-8'>\n                    <h1>TronLink Required</h1>\n                    <p>\n                        To create a post or tip others you must install TronLink. TronLink is a TRON wallet for the browser\n                        that can be <a href={ WEBSTORE_URL } target='_blank' rel='noopener noreferrer'>installed from the Chrome Webstore</a>.\n                        Once installed, return back and refresh the page.\n                    </p>\n                </div>\n                { logo }\n            </div>\n        );\n    }\n\n    return (\n    <>  <a href='/'>\n        <div className='tronLink row' style={{'padding': '3em','decoration':'none','color':'black'}}>\n\n            <div className='info col-sm-8'>\n                <h1>Log in Required</h1>\n                <p>\n                    TronLink is installed but you must first log in. Open TronLink from the browser bar and set up your\n                    first wallet or decrypt a previously created wallet.\n                </p>\n            </div>\n            { logo }\n        </div>\n\n        </a>\n\n    </>\n    );\n};\n\nexport default TronLinkGuide;\n","import React, { Component } from \"react\";\nimport TronWeb from \"tronweb\";\n\nimport Utils from \"../../utils\";\nimport CrowdFunding from \"../CrowdFunding\";\nimport TronLinkGuide from \"../TronLinkGuide\";\n\nconst FOUNDATION_ADDRESS = \"TWiWt5SEDzaEqS6kE5gandWMNfxR2B5xzg\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tronWeb: {\n        installed: false,\n        loggedIn: false\n      }\n    };\n  }\n\n  async componentDidMount() {\n    await new Promise(resolve => {\n      const tronWebState = {\n        installed: !!window.tronWeb,\n        loggedIn: window.tronWeb && window.tronWeb.ready\n      };\n\n      if (tronWebState.installed) {\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        return resolve();\n      }\n\n      let tries = 0;\n\n      const timer = setInterval(() => {\n        if (tries >= 10) {\n          const TRONGRID_API = \"https://api.trongrid.io\";\n\n          window.tronWeb = new TronWeb(\n            TRONGRID_API,\n            TRONGRID_API,\n            TRONGRID_API\n          );\n\n          this.setState({\n            tronWeb: {\n              installed: false,\n              loggedIn: false\n            }\n          });\n          clearInterval(timer);\n          return resolve();\n        }\n\n        tronWebState.installed = !!window.tronWeb;\n        tronWebState.loggedIn = window.tronWeb && window.tronWeb.ready;\n\n        if (!tronWebState.installed) {\n          return tries++;\n        }\n\n        this.setState({\n          tronWeb: tronWebState\n        });\n\n        resolve();\n      }, 100);\n    });\n\n    if (!this.state.tronWeb.loggedIn) {\n      // Set default address (foundation address) used for contract calls\n      // Directly overwrites the address object if TronLink disabled the\n      // function call\n      window.tronWeb.defaultAddress = {\n        hex: window.tronWeb.address.toHex(FOUNDATION_ADDRESS),\n        base58: FOUNDATION_ADDRESS\n      };\n\n      window.tronWeb.on(\"addressChange\", () => {\n        if (this.state.tronWeb.loggedIn) {\n          return;\n        }\n\n        this.setState({\n          tronWeb: {\n            installed: true,\n            loggedIn: true\n          }\n        });\n      });\n    }\n\n    Utils.setTronWeb(window.tronWeb);\n  }\n\n  render() {\n    if (!this.state.tronWeb.installed)\n      return (\n        <>\n          <div className=\"container\">\n            <TronLinkGuide />\n          </div>\n        </>\n      );\n\n    if (!this.state.tronWeb.loggedIn)\n      return (\n        <>\n          <div className=\"container\">\n            <TronLinkGuide installed />\n          </div>\n        </>\n      );\n\n    return (\n      <>\n        <section className=\"download bg-primary text-center\" id=\"download\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 mx-auto\">\n                <h2 className=\"section-heading\">Compra LION COIN!</h2>\n                <p>\n                  No te pierdas la gran oportunidad de ser pionero al invertir!\n                </p>\n                <CrowdFunding />\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    );\n  }\n}\nexport default App;\n\n// {tWeb()}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\n\nvar root = document.getElementById(\"root\");\n\n\nReactDOM.render(<App />, root);\n\n\n\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/TronLinkLogo.d3a8f115.png\";"],"sourceRoot":""}